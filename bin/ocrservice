#!/usr/bin/env node

var fs = require('fs'),
    os = require('os'),
    program = require('commander'),
    pjson = require('../package.json'),
    OCR = require('../lib/ocr'),
    variables = require('../lib/variables').variables,
    path =  require('path');

function exdendedHelp(){
  console.log('');
}

program
    .version(pjson.version)
    .description('ocr')
    .usage('[options]')
    .option('-f, --filename [filename]','the image')
    .option('-p, --path [path]','the image-path for watching')
    .option('-g, --goodread [goodread]','the good read image-path')
    .option('-b, --badread [badread]','the bad read image-path')
    .option('-u, --unclearread [unclearread]','the unclear read image-path')

    .option('--db_name [db_name]', 'the database name, default is sorter *1')
    .option('--db_user [db_user]', 'the database username, default is root *1')
    .option('--db_password [db_password]', 'the database password, default is empty *1')
    .option('--db_host [db_host]', 'the database host, defaults to localhost *1')

    .on('--help',exdendedHelp)
    .parse(process.argv);

if (program.filename){
  OCR.ocr(program.filename,function(err,res){
    if (err) throw err;
    //console.log(JSON.stringify(res,null,4));
    if (variables.OCR_DEBUG==="0"){
      process.exit();
    }
  });
  if (variables.OCR_DEBUG!=="0"){
    setInterval(function(){
      process.exit();
    },parseInt(variables.OCR_DEBUG_TIMEOUT));
  }
}

if (program.path){
  if (!program.goodread){
    program.help();
  }else if (!program.badread){
    program.help();
  }else if (!program.unclearread){
    program.help();
  }else{
    OCR.watch(program.path,program.goodread,program.badread,program.unclearread);
  }
}
